<h1>About</h1>
<p>網站: <a href="https://mdecd2023.github.io/football-apj1">https://mdecd2023.github.io/football-apj1</a><span><span> </span></span></p>
<p><span>倉儲:<span> </span></span><a href="https://github.com/mdecd2023/football-apj1">https://github.com/mdecd2023/football-apj1</a></p>
<p><span>討論區: </span><a href="https://github.com/mdecd2023/football-apj1/discussions">https://github.com/mdecd2023/football-apj1/discussions</a></p>
<h1>足球場景</h1>
<p>bubbleRob1 與 bubbleRob2 分別透過 19997 與 19998 埠號交由雙方的 Python remoteAPI 進行控制</p>
<p>場景串流埠號: 23020</p>
<p>假設: 19997 與 bubbleRob1 的控制在一台 Windows 10 電腦上, 而 19998 則交由另外一台電腦控制.</p>
<h1>評分</h1>
<p><a href="https://gist.githubusercontent.com/mdecycu/92a2f2d8389aeeca986ecb9f7a901180/raw/a9fcd1d1f33d892c8a1f30102262a3269475741f/2a_w6-2_python_remote_api_result.txt">2a w6-2 Python remoteAPI 連線查驗結果.txt</a></p>
<p><a href="https://mde.tw/studlist/2023spring/2a.txt">2a 學號與 Githbu 帳號對應名單</a></p>
<p>還需要設法取得各組組員名單, 然後再換成學號</p>
<p>請各組在 pj1 分組網頁中, 以 w6 (H2) 作為頁面標題, 直接在頁面中, 列出完成連線的分組與未完成連線的分組組員學號. </p>
<p>預計採用 Brython 讀取上面兩個連結資料後, 再逐一利用迴圈進行比對</p>
<!-- 建立 Brython 環境 -->
<p id="brython_div"></p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/']});
}
</script>
<p id="output"></p>
<script type="text/python">
# 從 browser 模組導入 html 與 document
# html 用於建立 html 物件, 而 document 則可對應到網頁元件
from browser import html, document
import re
# api 練習傳送結果的 gist url
api_result_url = "https://gist.githubusercontent.com/mdecycu/92a2f2d8389aeeca986ecb9f7a901180/raw/a9fcd1d1f33d892c8a1f30102262a3269475741f/2a_w6-2_python_remote_api_result.txt"
# 從 studlist 倉儲取得的學號與帳號對應連結
stud_github_url = "https://mde.tw/studlist/2023spring/2a.txt"
api_result = open(api_result_url).read().split("\n")
output = document["output"]
group = []
for i in api_result:
    try:
        if "虛擬世界" not in i:
            num = re.findall('\d+', i )
            if num[0] != "":
                #output <= str(num[0])
                #output <= html.BR()
                group.append(int(num[0]))
    except:
        pass
    
stud_github = open(stud_github_url).read().split("\n")
for i in stud_github:
    output <= i
    output <= html.BR()
output <= "完成 remote API 連線的 2a 組別"
output <= html.BR()
output <= str(sorted(list(set(group))))
</script>
<h1>pj1</h1>
<h2>ag1</h2>
<p>2a-pj1ag1組員:41023147紀閔翔、41023143施建菖</p>
<p>pj1倉儲:<a href="https://github.com/mdecd2023/2a-pj1ag1">https://github.com/mdecd2023/2a-pj1ag1</a> </p>
<p>pj1網頁:<a href="https://mdecd2023.github.io/2a-pj1ag1/content/project1.html">https://mdecd2023.github.io/2a-pj1ag1/content/project1.html</a> </p>
<p>1.建立<a href="/downloads/ag1/foodball case.SLDPRT">球框</a></p>
<p><img alt="" height="630" src="/images/football stage.png" width="1008"/></p>
<p>==</p>
<p>2.叫出可使用方向鍵控制的小車</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/bRLHoNq-ofE" title="YouTube video player" width="560"></iframe></p>
<p>==</p>
<p>3.加上感測器</p>
<p>感測器lua</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    score1 = 0
    
    sensor = sim.getObject('./sensor')
    xml = [[
        <ui closeable="false" resizable="false" title="Scoreboard">
        <label id="10" style="* {background-color: #808080; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;" text="Score:"></label>
        <label id="30" style="* {background-color: #FFF; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;" text="0"></label>
     
        </ui>
    ]]
    ui = simUI.create(xml)
    simUI.setPosition(ui, 0,0, true)
    bubbleRob = sim.getObject('/bubbleRob')
    ball = sim.getObject('/ball')
    bubbleRob2 = sim.getObject('/bubbleRob2')
    initialPosition = sim.getObjectPosition(bubbleRob, -1)
    initialOrientation = sim.getObjectOrientation(bubbleRob, -1)
    initialPosition2 = sim.getObjectPosition(bubbleRob2, -1)
    initialOrientation2 = sim.getObjectOrientation(bubbleRob2, -1)
    initialballPosition = sim.getObjectPosition(ball, -1)
    initialballOrientation = sim.getObjectOrientation(ball, -1)

end


function sysCall_actuation()
    --simUI.setLabelText(ui, 30, tostring(sim.getFloatSignal("myVariable")))
    result=sim.readProximitySensor(sensor)
    if(score1&lt;5)then
        if(result&gt;0)then
            score2 = score1+1
            simUI.setLabelText(ui, 30, tostring(score2))

            sim.setObjectPosition(bubbleRob, -1, initialPosition)
            sim.setObjectOrientation(bubbleRob, -1, initialOrientation)
            sim.setObjectPosition(bubbleRob2, -1, initialPosition2)
            sim.setObjectOrientation(bubbleRob2, -1, initialOrientation2)
            sim.setObjectPosition(ball, -1, initialballPosition)
            sim.setObjectOrientation(ball, -1, initialballOrientation)
            score1=score2
        end
    else
        sim.pauseSimulation()
    end
end
end</pre>
<p></p>
<p>==</p>
<p>4.使用方向鍵操控車子並得分</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/J7PKoCj7Ie0" title="YouTube video player" width="560"></iframe></p>
<p>5.成功雙人連線(在關了三個防火牆之後)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/2oGSiprgVwo" title="YouTube video player" width="560"></iframe></p>
<div id="gtx-trans" style="position: absolute; left: 35px; top: 145.833px;">
<div class="gtx-trans-icon"></div>
</div>
<h2>ag2</h2>
<p>2a-pj1ag2組員:41023146洪偉陞、41023148夏進源</p>
<p>pj1倉儲:<a href="https://github.com/mdecd2023/2a-pj1ag2">https://github.com/mdecd2023/2a-pj1ag2</a></p>
<p>pj1網頁:<a href="https://mdecd2023.github.io/2a-pj1ag2/content/index.html">https://mdecd2023.github.io/2a-pj1ag2/content/index.html</a></p>
<p>bubbleRob足球遊戲</p>
<p>1.先繪製球框(<a href="/downloads/ag2_downloads/ball frame.7z">ball frame.7z</a>)</p>
<p><img alt="" height="315" src="/downloads/ag2_downloads/2023-03-27.png" width="560"/></p>
<p>2.使用鍵盤控制<a href="/downloads/ag2_downloads/bubbleRob_lua.ttt">bubbleRob</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/MfkN-pduOq0" title="YouTube video player" width="560"></iframe></p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()  
    right_wheel= sim.getObjectHandle('joint1') 
    left_wheel= sim.getObjectHandle('joint2') 
    right_velocity=0 
    left_velocity=0
    speed=5
    sim.setJointTargetVelocity(right_wheel,0)
    sim.setJointTargetVelocity(left_wheel,0)
 
end
  
function sysCall_actuation()  
    message,auxiliaryData=sim.getSimulatorMessage() 
    while message~=-1 do
        if (message==sim.message_keypress) then
            
            if (auxiliaryData[1]==32) then

                right_velocity=0 
                left_velocity=0 
                sim.setJointMaxForce(right_wheel, 0) 
                sim.setJointMaxForce(left_wheel, 0) 
                break
            else
                sim.setJointMaxForce(right_wheel, 10) 
                sim.setJointMaxForce(left_wheel, 10)
            
            
                if (auxiliaryData[1]==2007) then -- up key
                    
                    sim.setJointTargetVelocity(right_wheel,speed)
                    sim.setJointTargetVelocity(left_wheel,speed)
                end
                if (auxiliaryData[1]==2008) then -- down key
                    
                    sim.setJointTargetVelocity(right_wheel,-speed/2)
                    sim.setJointTargetVelocity(left_wheel,-speed/2)
                    
                end
                if (auxiliaryData[1]==2009) then -- left key
                    sim.setJointTargetVelocity(right_wheel,speed)
                    sim.setJointTargetVelocity(left_wheel,speed/2)
                   
                end
                if (auxiliaryData[1]==2010) then -- right key
                    sim.setJointTargetVelocity(right_wheel,speed/2)
                    sim.setJointTargetVelocity(left_wheel,speed)
                    
                end

            end
        end
        message,auxiliaryData=sim.getSimulatorMessage()
    end
end</pre>
<p></p>
<p>3.加入球框感測器和記分板(<a href="/downloads/ag2_downloads/newbubbleRob2.ttt">newbubbleRob.ttt</a>)</p>
<p><img alt="" height="315" src="/downloads/ag2_downloads/scoreboard.png" width="560"/></p>
<p>感測器lua腳本</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    score1 = 0
    
    sensor = sim.getObject('./sensor')
    xml = [[
        &lt;ui title="Scoreboard" closeable="false" resizable="false" style="plastique"&gt;
        &lt;label text="Score:" style="* {background-color: #808080; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px; }" id="10"/&gt;
        &lt;label text="0" style="* {background-color: #FFF; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;}" id="30"/&gt;
     
        &lt;/ui&gt;
    ]]
    ui = simUI.create(xml)
    simUI.setPosition(ui, 0,0, true)
    bubbleRob = sim.getObject('/bubbleRob')
    ball = sim.getObject('/ball')
    bubbleRob2 = sim.getObject('/bubbleRob2')
    initialPosition = sim.getObjectPosition(bubbleRob, -1)
    initialOrientation = sim.getObjectOrientation(bubbleRob, -1)
    initialPosition2 = sim.getObjectPosition(bubbleRob2, -1)
    initialOrientation2 = sim.getObjectOrientation(bubbleRob2, -1)
    initialballPosition = sim.getObjectPosition(ball, -1)
    initialballOrientation = sim.getObjectOrientation(ball, -1)

end


function sysCall_actuation()
    --simUI.setLabelText(ui, 30, tostring(sim.getFloatSignal("myVariable")))
    result=sim.readProximitySensor(sensor)
    if(score1&lt;5)then
        if(result&gt;0)then
            score2 = score1+1
            simUI.setLabelText(ui, 30, tostring(score2))

            sim.setObjectPosition(bubbleRob, -1, initialPosition)
            sim.setObjectOrientation(bubbleRob, -1, initialOrientation)
            sim.setObjectPosition(bubbleRob2, -1, initialPosition2)
            sim.setObjectOrientation(bubbleRob2, -1, initialOrientation2)
            sim.setObjectPosition(ball, -1, initialballPosition)
            sim.setObjectOrientation(ball, -1, initialballOrientation)
            score1=score2
        end
    else
        sim.pauseSimulation()
    end
end</pre>
<p></p>
<p>4.改成用遠端api操控bubbleRob前後左右移動(<a href="/downloads/ag2_downloads/bubbleRob.7z">bubbleRob.7z</a>)</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/R4sNWGZLYoA" title="YouTube video player" width="560"></iframe></p>
<p>5.RemoteAPI操控</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/NU7_OHrISqo" title="YouTube video player" width="560"></iframe></p>
<h2>ag4</h2>
<p><span>2a-pj1ag4組員:41023125、41023128</span></p>
<p>pj1ag4倉儲:<a href="https://github.com/mdecd2023/2a-pj1ag4">https://github.com/mdecd2023/2a-pj1ag4</a></p>
<p>pj1ag4網頁:<a href="https://mdecd2023.github.io/2a-pj1ag4">https://mdecd2023.github.io/2a-pj1ag4</a></p>
<p><a href="/downloads/ag4/2a-pj1ag4 分組報告.pdf">2a-pj1ag4 分組報告pdf</a></p>
<p></p>
<p><span style="background-color: #ff0000;">歷程</span></p>
<p>3/24 完成將bubbleRob 雙輪車調整成手動模式</p>
<p>利用awsd鍵進行移動</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/T_q7Wp_GK6A" title="YouTube video player" width="560"></iframe></p>
<p><img caption="false" height="365" src="/images/lua move.png" width="560"/></p>
<p>觸發特定條件使<span>bubbleRob 雙輪車</span>回到原位</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/14i_4W1tOGk" title="YouTube video player" width="560"></iframe></p>
<p>3/25 完成足球製作以及<span>觸發條件設定製作</span></p>
<p>使球觸碰到球門的感測器後重製球場</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/pgLG2eIy6lo" title="YouTube video player" width="560"></iframe><span></span></p>
<p>紀錄初始位置</p>
<p><img alt="" height="101" src="/images/紀錄初始位置.png" width="892"/></p>
<p>重製位置</p>
<p><img alt="" src="/images/重製位置.mp4"/><img caption="false" height="94" src="/images/重製位置.png" width="876"/></p>
<p>3/26 增加放開鍵盤會停止、倒數計時、記分板</p>
<p>增加放開鍵盤一段時間後會將速度設為0直到按下鍵盤</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/oGEXV054pAk" title="YouTube video player" width="560"></iframe></p>
<p><img alt="" src="/images/index.html"/>增加倒數計時與分數的面板</p>
<p>開始後開始倒數計時</p>
<p>時間到則結束</p>
<p><img caption="false" height="293" src="/images/326.png" width="554"/></p>
<p>兩邊感測與計算皆完成</p>
<p><img alt="" height="293" src="/images/326-2.png" width="560"/></p>
<p><span>記分板與計時程式</span></p>
<p><span><img caption="false" height="168" src="/images/記分板與計時程式.png" width="560"/></span></p>
<p><span></span>3/29 連線問題解決</p>
<p>將操作的程式轉成python</p>
<p>4/12 確認連機遊玩可執行</p>
<p>加入歡迎跟恭喜</p>
<p><img caption="false" height="298" src="/images/412-1.png" width="560"/></p>
<p></p>
<p><img caption="false" height="296" src="/images/412-2.png" width="560"/></p>
<p>共經歷了八個版本改版</p>
<p>前七個版本:<a href="/downloads/ag4/bubbleRob紀錄.7z">bubbleRob紀錄.7z</a></p>
<p>最終版:<a href="/downloads/ag4/bubbleRob.7z">bubbleRob.7z</a></p>
<p>裡面包含了my_ip.txt ip.bat  ip.py bubbleRob2.py bubbleRob.py bubbleRob_scenes.ttt等</p>
<p>點擊<span>ip.bat就能直接獲取到目前電腦的ipv4位置</span></p>
<p><span><img caption="false" height="147" src="/images/ip.png" width="734"/></span></p>
<p><span></span></p>
<p> 加入遊戲所在電腦ip 只需輸入ip (<span>遊戲所在電腦ip</span>)</p>
<p><img caption="false" height="151" src="/images/gameip.png" width="859"/></p>
<p></p>
<p><span style="background-color: #ff0000;">程式</span></p>
<p>場景部分將程式將拆成了許多部分</p>
<p>用以方便維修</p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
-- 場景模擬開始時開啟19998與23020埠號
simRemoteApi.start(19998)
simRemoteApi.start(23020)
end</pre>
<p></p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    --紀錄初始位置並在得分時重置位置
    --倒數計時與計算分數並顯示等
    sensor = sim.getObject('./sensor')
    sensor2 = sim.getObject('./sensor2')
    bubbleRobBase = 197
    bubbleRobBase2 = 210
    ball = 206
    initialBubbleRobPosition = sim.getObjectPosition(bubbleRobBase, -1)
    initialBubbleRobOrientation = sim.getObjectOrientation(bubbleRobBase, -1)
    initialballPosition = sim.getObjectPosition(ball, -1)
    initialballOrientation = sim.getObjectOrientation(ball, -1)
    initial2Position = sim.getObjectPosition(bubbleRobBase2, -1)
    initial2Orientation = sim.getObjectOrientation(bubbleRobBase2, -1)
    -- do some initialization here
    count = 1800  -- ??30????????????
    score1 = 0  -- ??????
    score2 = 0
    xml = [[
        &lt;ui closeable="false" resizeable="false" activate="false"&gt;
            &lt;label text="30:00" style="* {background-color: #F00; color: #FFF; font-size: 32px; font-weight: bold; padding: 4px; border-radius: 4px;}" id="10"/&gt;
            &lt;label text="0" style="* {background-color: #00F; color: #FFF; font-size: 32px; font-weight: bold; padding: 4px; border-radius: 4px;}" id="20"/&gt;
            &lt;label text="0" style="* {background-color: #00F; color: #FFF; font-size: 32px; font-weight: bold; padding: 4px; border-radius: 4px;}" id="30"/&gt;
        &lt;/ui&gt;
    ]]
    ui = simUI.create(xml)
    simUI.setPosition(ui, 0,0, true)
end

function sysCall_actuation()
    result=sim.readProximitySensor(sensor)
    result2=sim.readProximitySensor(sensor2)
    --if sim.getSimulationTime() == 0 then
        --sim.pauseSimulation()
    --end

    -- 0 or 1
    if(result&gt;0)then
        sim.pauseSimulation()
        sim.setObjectPosition(bubbleRobBase, -1, initialBubbleRobPosition)
        sim.setObjectOrientation(bubbleRobBase, -1, initialBubbleRobOrientation)
        sim.setObjectPosition(ball, -1, initialballPosition)
        sim.setObjectOrientation(ball, -1, initialballOrientation)
        sim.setObjectPosition(bubbleRobBase2, -1, initial2Position)
        sim.setObjectOrientation(bubbleRobBase2, -1, initial2Orientation)
        score1 = score1 +1 
        
    end
    if(result2&gt;0)then
        sim.pauseSimulation()
        sim.setObjectPosition(bubbleRobBase, -1, initialBubbleRobPosition)
        sim.setObjectOrientation(bubbleRobBase, -1, initialBubbleRobOrientation)
        sim.setObjectPosition(ball, -1, initialballPosition)
        sim.setObjectOrientation(ball, -1, initialballOrientation)
        sim.setObjectPosition(bubbleRobBase2, -1, initial2Position)
        sim.setObjectOrientation(bubbleRobBase2, -1, initial2Orientation)
        score2 = score2 +1 
        
    end
    if count &gt; 0 then
        count = count - 1
        local minutes = math.floor(count / 60)
        local seconds = count % 60
        local timeStr = string.format("%d:%02d", minutes, seconds)
        simUI.setLabelText(ui, 10, timeStr)
        simUI.setLabelText(ui, 20, tostring(score1))
        simUI.setLabelText(ui, 30, tostring(score2))
    else
        sim.stopSimulation()
    end

end
</pre>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    --開始時暫停模擬並顯示welcome to play
    --之後顯示congratulations on getting a point
    xml1 = [[
        &lt;ui closeable="false" resizeable="false" activate="false"&gt;
            &lt;label text="welcome to play" style="* {background-color: #00F; color: #FFF; font-size: 32px; font-weight: bold; padding: 4px; border-radius: 4px;}" id="1"/&gt;
        &lt;/ui&gt;
    ]]
    ui1 = simUI.create(xml1)
    add = true 
    -- Pause simulation on the first run
    sim.pauseSimulation(true)
end

function sysCall_actuation()
    simUI.hide(ui1)
    
    
    
end

function sysCall_suspend()
    simUI.show(ui1)
    --simUI.setLabelText(ui1, 1, "good game")
    if add == false then 
        simUI.setLabelText(ui1, 1, "congratulations on getting a point")
    end
    add = false
end
</pre>
<p>python操控部分<br/><br/></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#bubbleRob.py
import sim
import sys, math
import keyboard
import time

with open('my_ip.txt', 'r') as f:
    my_ip1 = f.readlines()
    for line in my_ip1:
        if 'game' in line: #game #myip #local
            ip = line.split(':')[1].strip()
            print(ip)

# 連接到 CoppeliaSim simulation
sim.simxFinish(-1)
clientID = sim.simxStart(ip, 19997, True, True, 5000, 5)
sim.simxStartSimulation(clientID, sim.simx_opmode_oneshot_wait)

if clientID != -1:
    print("已連線到遠端 CoppeliaSim 伺服器")
else:
    print('連線失敗')
    sys.exit('無法連線到 CoppeliaSim 伺服器')

# 取得馬達與感測器的 handles
errorCode, leftMotor = sim.simxGetObjectHandle(clientID, 'leftMotor', sim.simx_opmode_oneshot_wait)
errorCode, rightMotor = sim.simxGetObjectHandle(clientID, 'rightMotor', sim.simx_opmode_oneshot_wait)
errorCode, sensingNose = sim.simxGetObjectHandle(clientID, 'sensingNose', sim.simx_opmode_oneshot_wait)

# 設定一些參數
deg = math.pi/180
paused = False
if errorCode == -1:
    print('找不到左右馬達')
    sys.exit()

def jointspeed(left,right):
    errorCode4=sim.simxSetJointTargetVelocity(clientID,leftMotor,left, sim.simx_opmode_oneshot)
    errorCode5=sim.simxSetJointTargetVelocity(clientID,rightMotor,right, sim.simx_opmode_oneshot_wait)
errorCode, number2 = sim.simxLoadModel(clientID, 'number2.ttm', 0, sim.simx_opmode_oneshot_wait)   
while sim.simxGetConnectionId(clientID) != -1:
    event = keyboard.read_event()
    if event.event_type == 'down':
        print('The "' + event.name + '" key was pressed.')
    if event.name == 'a' :
        jointspeed(-3,5)
    elif event.name == 'w' :
        jointspeed(5,5)
    elif event.name == 's' :
        jointspeed(-5,-5)
    elif event.name == 'd' :
        jointspeed(5,-3)
    if event.name == 'p':
        if not paused:
            print('Paused')
            sim.simxPauseSimulation(clientID, sim.simx_opmode_oneshot_wait)
            paused = True
            time.sleep(0.1)
        else:
            print('Resumed')
            sim.simxStartSimulation(clientID, sim.simx_opmode_oneshot_wait)
            paused = False
            time.sleep(0.1)
</pre>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#bubbleRob2.py
import sim
import sys, math
import keyboard
import time

with open('my_ip.txt', 'r') as f:
    my_ip1 = f.readlines()
    for line in my_ip1:
        if 'game' in line: #game #myip #local
            ip = line.split(':')[1].strip()
            print(ip)


# 連接到 CoppeliaSim simulation
sim.simxFinish(-1)
clientID = sim.simxStart(ip, 19998, True, True, 5000, 5)
sim.simxStartSimulation(clientID, sim.simx_opmode_oneshot_wait)

if clientID != -1:
    print("已連線到遠端 CoppeliaSim 伺服器")
else:
    print('連線失敗')
    sys.exit('無法連線到 CoppeliaSim 伺服器')

# 取得馬達與感測器的 handles
errorCode, sensingNose = sim.simxGetObjectHandle(clientID, 'sensingNose', sim.simx_opmode_oneshot_wait)
errorCode = 0
leftMotor = 216
rightMotor = 214
print(errorCode)
# 設定一些參數
deg = math.pi/180
paused = False
if errorCode == -1:
    print('找不到左右馬達')
    sys.exit()

def jointspeed(left,right):
    errorCode4=sim.simxSetJointTargetVelocity(clientID,leftMotor,left, sim.simx_opmode_oneshot)
    errorCode5=sim.simxSetJointTargetVelocity(clientID,rightMotor,right, sim.simx_opmode_oneshot_wait)
errorCode, number2 = sim.simxLoadModel(clientID, 'number2.ttm', 0, sim.simx_opmode_oneshot_wait)   
while sim.simxGetConnectionId(clientID) != -1:
    event = keyboard.read_event()
    if event.event_type == 'down':
        print('The "' + event.name + '" key was pressed.')
    if event.name == 'a' :
        jointspeed(-3,5)
    elif event.name == 'w' :
        jointspeed(5,5)
    elif event.name == 's' :
        jointspeed(-5,-5)
    elif event.name == 'd' :
        jointspeed(5,-3)
    if event.name == 'p':
        if not paused:
            print('Paused')
            sim.simxPauseSimulation(clientID, sim.simx_opmode_oneshot_wait)
            paused = True
            time.sleep(0.1)
        else:
            print('Resumed')
            sim.simxStartSimulation(clientID, sim.simx_opmode_oneshot_wait)
            paused = False
            time.sleep(0.1)

</pre>
<p></p>
<p><span style="background-color: #ff0000;">遊戲說明</span></p>
<p>開啟場景後便可以使用19997進行連線</p>
<p>如果成功連線便會顯示</p>
<p><img caption="false" height="297" src="/images/412-1.png" width="560"/></p>
<p>這時23020與19998埠號便會開啟</p>
<p>第二位玩家便可利用19998加入遊戲</p>
<p>加入成功便會立即開始</p>
<p>玩家可利用wasd進行操控</p>
<p>觀戰者可以利用23020埠號進行觀戰</p>
<p>一方得分後便會暫停遊戲並還原場地</p>
<p>按下p則繼續遊戲</p>
<p>時間到便會結束遊戲</p>
<p>歡迎與恭喜lua程式</p>
<p><img caption="false" height="296" src="/images/歡迎與恭喜lua.png" width="560"/></p>
<p></p>
<p><span style="background-color: #ff0000;">缺陷</span></p>
<p>1.在23020埠號的觀戰者無法查看到分數與時間,只能顯示在場景的主畫面上</p>
<p>2.機器人的機體不適合推球</p>
<p>3.遊戲結束後可以加入哪方勝利字樣</p>
<p>4.計分可以拆分成兩方並標示(藍方紅方等)以便了解比分情況</p>
<p>5.翻車時目前沒有自救空間</p>
<p>可以增加按鍵來達成加機器擺正</p>
<p>6.按鍵指令只能觸發一個</p>
<p>造成動作不夠連貫</p>
<p>希望能做到同時按兩個鍵</p>
<p>將會有更高的操作性</p>
<p><span style="background-color: #ff0000;">補充</span></p>
<p>sensingNose其實沒有實際用處</p>
<p>不拔除主要原因是可以用來凸顯bubbleRob的移動方向</p>
<p><span style="background-color: #ff0000;">心得</span></p>
<p>這次的專案從中學習到了CoppeliaSim的remoteApi實際運作方式</p>
<p>也對CoppeliaSim的lua與python的寫法有更深得了解</p>
<p>對於CoppeliaSim的句柄用法了解透徹能夠靈活運用</p>
<p>不過對於sim.py函式庫的使用依舊有加強空間</p>
<p>許多函式不熟悉只能使用替代方案執行</p>
<p>編寫程式時可以多利用print</p>
<p>不管是除錯或者理解暫存的內容都好用</p>
<p>lua的寫法與習慣的pyhton略有不同</p>
<p>例如</p>
<p>--lua註解</p>
<p>#python註解</p>
<p>lua程式後面需要加上end表示結束</p>
<p>但不需要像python重視縮排</p>
<p>-- lua 的if</p>
<p>if *條件* then *輸出* elseif *條件2* then *輸出2* else *輸出3* end</p>
<p>python不需要then 且elif跟lua的elseif寫法不同需要注意</p>
<p>-- lua 的whilefunction sysCall_actuation()</p>
<p>*程式*</p>
<p>end</p>
<p>跟python的while True:類似無限循環執行到結束</p>
<h2>ag5</h2>
<p>組長: 41023121 李承翰 ， 組員：41023134 林建維</p>
<p>網頁<span> </span><a href="https://mdecd2023.github.io/2a-pj1ag5/content/index.html">https://mdecd2023.github.io/2a-pj1ag5/content/index.html</a></p>
<p>倉儲<span> </span><a href="https://github.com/mdecd2023/2a-pj1ag5">https://github.com/mdecd2023/2a-pj1ag5</a></p>
<p><span>bubbleRob足球遊戲</span></p>
<p><span></span></p>
<p><a href="/downloads/ag5/球框.stl">球框.stl </a> <a href="/downloads/ag5/球框.prt">球框.prt</a></p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData1" height="630" muted="true" width="1008">
<source src="./../downloads/ag5/球框/1.mp4" type="video/mp4"/></video></div>
<p><img alt="" height="573" src="/images/球框.png" width="986"/></p>
<p><a href="/downloads/ag5/兩台車車加球框.ttt">兩台車車加球框.ttt</a></p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData1" height="630" muted="true" width="1008">
<source src="./../downloads/ag5/兩車車加球框/1.mp4" type="video/mp4"/></video></div>
<p><a href="/downloads/ag5/計分.ttt">計分.ttt</a></p>
<p><img alt="" height="572" src="/images/計分.png" width="1016"/></p>
<p><a href="/downloads/ag5/sensor.txt">sensor.txt</a> <a href="/downloads/ag5/sensor2.txt">sensor2.txt</a> <a href="/downloads/ag5/bubbleRob_zmq_examples .7z">bubbleRob_zmq_examples .7z</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/zCCj7oN0XuA" title="YouTube video player" width="560"></iframe></p>
<p>兩台車車對戰影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/yxFX1Op0uQA" title="YouTube video player" width="560"></iframe></p>
<p>李承翰 41023121 :這學期的課程節奏十分緊湊，我也花了許多的時間在了解程式及原 理，雖然現在有 AI 的協助但是 AI 必須問得非常精準才能得到我想要的 答案，像是程式出錯時的回應他能很精準地回答，但是如果是問他程式 的問題時他有時會列出很多種可能，看到其實心很累啊。這次的車車老 實說大部分還是由老師所提供也謝謝同學的教導與修正我才能如期完成 這項作業。 </p>
<p>林建維 41023134:這次的教學比較難，花了很多時間來處理解決，也謝謝同學的凱瑞 才得以完成。</p>
<h2>ag6</h2>
<p>組員：呂佳柔41023104 王啟騰41023112</p>
<p>pj1ag6網站 <a href="https://mdecd2023.github.io/2a-pj1ag6/content/index.html">https://mdecd2023.github.io/2a-pj1ag6/content/index.html</a> </p>
<p>pj1ag6倉儲 <a href="https://github.com/mdecd2023/2a-pj1ag6">https://github.com/mdecd2023/2a-pj1ag6</a> </p>
<p>BubbleRob</p>
<p>1.在 Tutorial1 中以 CoppeliaSim 建立 bubbleRob 機器人，添加關節給予馬力、<span>利用近接感測器偵測障礙物並透過 Lua script 控制 bubbleRob 雙輪車的移動。</span></p>
<p><span>2.</span>繪製球場</p>
<script>
var winkVideoData_40923151 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="./../downloads/ag6/球場繪製.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass"><a href="/downloads/ag6/球場.SLDPRT">球場.SLDPRT</a>  <a href="/downloads/ag6/球場.STL">球場.STL</a></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass">3.加入感測器</div>
<script>
var winkVideoData_40923152 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923152" height="630" muted="true" width="1008">
<source src="./../downloads/ag6/加入感測器.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass">4.加入bubbleRob和球</div>
<div class="winkVideoContainerClass"></div>
<script>
var winkVideoData_40923153 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923153" height="630" muted="true" width="1008">
<source src="./../downloads/ag6/add bubbleRob and ball.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass">5.加入程式碼</div>
<div class="winkVideoContainerClass"></div>
<script>
var winkVideoData_40923155 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923155" height="630" muted="true" width="1008">
<source src="./../downloads/ag6/導入程式碼.mp4"/></video></div>
<div class="winkVideoContainerClass"><a href="/downloads/ag6/完整.ttt">Football.ttt</a>   <a href="/downloads/ag6/bubbleRob_zmq_examples.rar">bubbleRob.rar</a>  <a href="/downloads/ag6/sensor.txt">sensor.txt</a>  <a href="/downloads/ag6/sensor2.txt">sensor2.txt</a></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"></div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/0FSaMjbxHxo" title="YouTube video player" width="560"></iframe></p>
<p>6.使用 Latex 以 TeXwork 生成 PDF</p>
<p><a href="/downloads/ag6/cd_report.pdf">專題報告PDF</a></p>
<p><img alt="" height="762" src="/images/TeXworks.png" width="1438"/></p>
<h2>ag7</h2>
<p>2a-pj1ag7組員:41023106李凱新、41023103江芷柔</p>
<p>倉儲:<a href="https://github.com/mdecd2023/2a-pj1ag7">https://github.com/mdecd2023/2a-pj1ag7</a></p>
<p>網頁:<span> </span><a href="https://mdecd2023.github.io/2a-pj1ag7/">https://mdecd2023.github.io/2a-pj1ag7/</a></p>
<p><a href="/downloads/2.ttt">/downloads/2.ttt</a><a href="/downloads/球場.STL">/downloads/球場.STL</a></p>
<p><a href="/downloads/cd_report.pdf">/downloads/cd_report.pdf</a></p>
<p>1.製作球場</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="./../downloads/ag7/foot ball 1.mp4" type="video/mp4"/></video></div>
<p>2.放入bubbleRob</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_40923151" height="630" muted="true" width="1008">
<source src="./../downloads/ag7/foot ball 2.mp4" type="video/mp4"/></video></div>
<p>在 CoppeliaSim 中，當您啟動仿真場景時，將自動執行名為<span style="background-color: #ffcc00;"> "sysCall_init" </span>的回調函數。這裡的函數體沒有任何操作，因此在場景啟動時不會執行任何代碼。</p>
<p><span style="background-color: #ff99cc;"><strong>print 是甚麼用途?</strong></span><br/>在 Lua 中，print 函數是用於輸出一些信息到控制台的函數。它通常被用於調試和測試程式碼時，幫助程式設計師理解程式碼的執行過程。</p>
<p>例如，您可以使用 print 函數輸出一些變數的值，以了解它們的值是否符合預期。您還可以使用 print 函數輸出一些程式狀態資訊，以確保程式按照您的預期執行。</p>
<p>在 CoppeliaSim 環境中，print 函數可以輸出一些模擬場景中的資訊，如<span style="background-color: #ffcc00;">模型對象的名稱、坐標位置</span>等。這些資訊可以幫助您調試和測試您的模擬場景。</p>
<p><span style="background-color: #ff99cc;"><strong>sim.getObject</strong>是甚麼意思?</span><br/>sim.getObject 是 CoppeliaSim 中的一個函數，用於<span style="background-color: #ffcc00;">獲取場景中的對象句柄</span>（handle）。在 CoppeliaSim 中，幾乎所有的對象，如模型、傳感器、動作等都可以被看作一個對象，每個對象都有一個唯一的句柄。</p>
<p>通過調用<span style="background-color: #ffcc00;"> sim.getObject 函數並傳遞該對象的名稱</span>，可以獲取該對象的句柄。獲取對象句柄後，您就可以使用其他的<span style="background-color: #ffcc00;"> API 函數來操作該對象</span>，例如改變對象的位置和方向、獲取對象的信息等等。</p>
<p>例如，下面的程式碼使用 sim.getObject 函數獲取場景中名為 "Pioneer_p3dx" 的機器人對象，並將其句柄存儲在變量 robotHandle 中。</p>
<p><img alt="" height="299" src="/images/螢幕擷取畫面 2023-04-16 143651.png" width="414"/></p>
<p><img alt="" height="125" src="/images/螢幕擷取畫面 2023-04-16 141859.png" width="427"/></p>
<p></p>
<p></p>
<p><img alt="" height="96" src="/images/螢幕擷取畫面 2023-04-16 142004.png" width="417"/></p>
<p><img alt="" height="297" src="/images/螢幕擷取畫面 2023-04-16 151508.png" width="887"/></p>
<p>程式碼中使用了 sim.getObject 函數，這是 V-REP 中的一個函數，用於獲取場景中的物件。具體來說，變數 sensor1 和 sensor2 分別被賦值為場景中名稱為 door1 和 door2 的物件。bubbleRobBase 和 ball 變數分別被賦值為 34 和 16，這表示場景中分別有兩個物件的編號為 34 和 16。</p>
<p>接下來，程式碼使用 sim.getObjectPosition 函數和 sim.getObjectOrientation 函數分別獲取了 bubbleRobBase、ball 和名稱為 23 的物件的位置和方向。這些位置和方向的值將被用作後續程式的參考，例如將 bubbleRobBase 和 ball 移回它們的初始位置。</p>
<p>最後，程式碼使用 print 函數將 bubbleRobBase 和 ball 的值輸出到控制台，以供使用者查看和調試。</p>
<p><span style="background-color: #cc99ff;"><strong>記分板</strong></span></p>
<p><span><span style="background-color: #ff99cc;">"do some initialization here" </span>是一個程式設計的術語，指的是在程式開始執行之前，需要進行一些初始化的動作，例如設定變數的初值、載入資料庫、建立物件等等。這樣可以確保程式在執行時能夠順利運作，因為有些變數或資源需要預先被設定或載入，才能夠正確地被程式所使用。在程式開發中，初始化是非常重要的一個步驟，能夠確保程式的正確性、可靠性和穩定性。</span></p>
<p><img alt="" height="172" src="/images/螢幕擷取畫面 2023-04-16 150711.png" width="962"/></p>
<p>這段程式碼是一個 Lua 腳本，在機器人仿真軟體 V-REP 中執行，它的功能是創建一個介面(UI)，並在介面中加入三個 label 元件，顯示計時器和分數。</p>
<p>具體來說，程式碼中的 count 變數被賦值為 4500，這表示計時器初始值為 30 分鐘（因為 4500 秒等於 30 分鐘）。score1 和 score2 變數被賦值為 0，這是為了儲存兩隊的分數。</p>
<p>接下來，定義了一個包含三個 label 元件的 xml 字串，每個 label 元件都有不同的樣式（style）和 id 屬性。這些 label 元件分別用來顯示計時器、第一隊的分數和第二隊的分數。</p>
<p>最後，通過 simUI.create 函數創建了一個新的介面(ui)，並將 xml 字串作為參數傳遞給這個函數。接著，使用 simUI.setPosition 函數將介面(ui)移動到畫面左上角（座標為 (0, 0)），並設置第三個參數為 true，表示移動後介面(ui)保持可見。</p>
<p><img alt="" height="489" src="/images/螢幕擷取畫面 2023-04-16 145221.png" width="990"/></p>
<p>這段程式碼是一個在V-REP模擬器中執行的函式，稱為"sysCall_actuation"。當模擬器啟動並運行該函式時，它會檢查"door1"和"door2"附近的距離感測器是否偵測到物體。如果偵測到，它會暫停模擬器運行，並將"bubbleRobBase"和"ball"移回它們的初始位置，以及將計數器"count"減少1，並更新UI中的分數和時間。當計數器達到0時，模擬器將停止運行。</p>
<p><img alt="" height="297" src="/images/螢幕擷取畫面 2023-04-16 151508.png" width="887"/></p>
<p>1<a href="/downloads/play.py">/downloads/play.py</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/7sdVWgzwml0" title="YouTube video player" width="560"></iframe></p>
<h2>ag8</h2>
<p>2a-pj1ag8組員 41023102王郁淳、41023107林廷芸</p>
<p><span>pj1ag8倉儲 <a href="https://github.com/mdecd2023/2a-pj1ag8">https://github.com/mdecd2023/2a-pj1ag8</a></span></p>
<p><span>pj1ag8網頁 <a href="https://mdecd2023.github.io/2a-pj1ag8/">https://mdecd2023.github.io/2a-pj1ag8/</a></span></p>
<p><span>bubbleRob足球對戰模擬</span></p>
<p><span style="background-color: #00ffff;">足球場場景繪製</span></p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_w2_1" height="600" muted="true" width="800">
<source src="/downloads/ag8/足球場繪製過程.mp4" type="video/mp4"/></video>
<p><span style="background-color: #00ffff;">匯入場景和泡泡機器人</span></p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_w2_1" height="600" muted="true" width="800">
<source src="/downloads/ag8/場景加bubbleRob.mp4" type="video/mp4"/></video>
<p><span></span></p>
</div>
</div>
<h2>ag10</h2>
<p>3/30 已完成場地及感測器</p>
<p><img alt="" height="405" src="/downloads/ag10/20230330.png" width="720"/></p>
<p>4/14 完成記分板程式</p>
<p><img alt="" height="405" src="/downloads/ag10/20230414.png" width="720"/></p>
<p>4/14 可進行計分</p>
<p>觸碰到感測器球及機器人會重置到原本的位置</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/QrEx-9oWQ-c" title="YouTube video player" width="560"></iframe></p>
<p>在錄影時記分板不會顯示出來-附上圖片</p>
<p><img alt="" height="405" src="/downloads/ag10/20230414-1.png" width="720"/></p>
<p>當分數為5分時，會暫停模擬</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/fWbkG7gVaFw" title="YouTube video player" width="560"></iframe></p>
<p>在製作感測器時求記得把 collidable、measurable、detectable 這三個選項打開</p>
<p><img alt="" height="405" src="/downloads/ag10/20230414-2.png" width="720"/></p>
<p>另外要注意的是感測器 z軸的部分不能為0，否則感測器會直接偵測到地板導致程式暫停模擬</p>
<p><span style="background-color: #00ffff;">記分板程式註解</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    score1 = 0 -- 初始化一個名為score1的變數，值為0
    
    sensor = sim.getObject('./sensor') -- 從模擬場景中獲取一個名為sensor的物體
    
    -- 創建一個UI，包括標題、計分標籤和當前分數值標籤，使用plastique風格
    xml = [[
        &lt;ui title="Scoreboard" closeable="false" resizable="false" style="plastique"&gt;
        &lt;label text="Score:" style="* {background-color: #808080; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px; }" id="10"/&gt;
        &lt;label text="0" style="* {background-color: #FFF; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;}" id="30"/&gt;
     
        &lt;/ui&gt;
    ]]
    ui = simUI.create(xml) -- 創建UI
    simUI.setPosition(ui, 0,0, true) -- 將UI定位在屏幕左上角
    bubbleRob = sim.getObject('/bubbleRob') -- 從模擬場景中獲取名為bubbleRob的物體句柄
    ball = sim.getObject('/ball') -- 從模擬場景中獲取名為ball的物體句柄
    bubbleRob2 = sim.getObject('/bubbleRob2') -- 從模擬場景中獲取名為bubbleRob2的物體句柄
    initialPosition = sim.getObjectPosition(bubbleRob, -1) -- 獲取bubbleRob物體的初始位置
    initialOrientation = sim.getObjectOrientation(bubbleRob, -1) -- 獲取bubbleRob物體的初始方向
    initialPosition2 = sim.getObjectPosition(bubbleRob2, -1) -- 獲取bubbleRob2物體的初始位置
    initialOrientation2 = sim.getObjectOrientation(bubbleRob2, -1) -- 獲取bubbleRob2物體的初始方向
    initialballPosition = sim.getObjectPosition(ball, -1) -- 獲取ball物體的初始位置
    initialballOrientation = sim.getObjectOrientation(ball, -1) -- 獲取ball物體的初始方向

end

function sysCall_actuation()
    --simUI.setLabelText(ui, 30, tostring(sim.getFloatSignal("myVariable")))

    -- 讀取接近傳感器的距離值，將其存儲在result變數中
    result=sim.readProximitySensor(sensor)

    -- 如果分數小於5，則執行以下操作
    if(score1&lt;5)then

        -- 如果檢測到接近物體，則執行以下操作
        if(result&gt;0)then
            -- 將score1變數增加1
            score2 = score1+1

            -- 在UI中更新分數值標籤的文本為score2
            simUI.setLabelText(ui, 30, tostring(score2))

            -- 重置bubbleRob、bubbleRob2和ball物體的位置和方向
            sim.setObjectPosition(bubbleRob, -1, initialPosition)
            sim.setObjectOrientation(bubbleRob, -1, initialOrientation)
            sim.setObjectPosition(bubbleRob2, -1, initialPosition2)
            sim.setObjectOrientation(bubbleRob2, -1, initialOrientation2)
            sim.setObjectPosition(ball, -1, initialballPosition)
            sim.setObjectOrientation(ball, -1, initialballOrientation)

            -- 將score1設置為score2
            score1=score2
        end
    else
        -- 如果分數達到5，則暫停模擬
        sim.pauseSimulation()
    end
end</pre>
<p><span style="background-color: #00ffff;">倒數計時器程式註解</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">-- 初始化函數，初始化得分(score1)為0和計時器(count)為3600
function sysCall_init()
    -- initialize the score to 0
    score1 = 0 -- 初始化得分
    count = 3600 -- 初始化計時器
    -- 獲取接近傳感器對象並創建UI界面
    sensor = sim.getObject('./sensor')
    xml = [[
            &lt;ui title="Scoreboard" closeable="false" resizable="false" style="plastique"&gt;
              &lt;label text="60:00.0" style="* {background-color: #F00; color: #FFF; font-size: 32px; font-weight: bold; padding: 4px; border-radius: 4px;}" id="10"/&gt;
              &lt;label text="Score:" style="* {background-color: #808080; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px; }" id="20"/&gt;
              &lt;label text="0" style="* {background-color: #FFF; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;}" id="30"/&gt;
            &lt;/ui&gt;
          ]]
    ui = simUI.create(xml)
    simUI.setPosition(ui, 0, 0, true)
    -- 獲取對象及其初始位置/方向
    bubbleRob = sim.getObject('/bubbleRob')
    ball = sim.getObject('/ball')
    initialPosition = sim.getObjectPosition(bubbleRob, -1)
    initialOrientation = sim.getObjectOrientation(bubbleRob, -1)
    initialballPosition = sim.getObjectPosition(ball, -1)
    initialballOrientation = sim.getObjectOrientation(ball, -1)
    
end

function sysCall_actuation() -- 讀取接近傳感器值
    result=sim.readProximitySensor(sensor)
    -- 檢查得分是否小於5
    if(score1&lt;5)then
        -- 檢查接近傳感器是否檢測到某物
        if(result&gt;0)then
            -- 增加得分並更新UI標籤
            score2 = score1+1
            simUI.setLabelText(ui, 30, tostring(score2))
            -- 重置對象的位置和方向
            sim.setObjectPosition(bubbleRob, -1, initialPosition)
            sim.setObjectOrientation(bubbleRob, -1, initialOrientation)
            sim.setObjectPosition(ball, -1, initialballPosition)
            sim.setObjectOrientation(ball, -1, initialballOrientation)
            -- 更新得分變量
            score1=score2
        end
    end
    if count &gt; 0 then -- 檢查計時器是否大於0
          count = count - 1 -- 減少倒數時間
          local minutes = math.floor(count / 60) -- 計算分鐘
          local seconds = count % 60 -- 計算秒數
          local timeStr = string.format("%d:%02d", minutes , seconds) -- 格式化時間字符串
          simUI.setLabelText(ui, 10, timeStr) -- 更新時間UI標籤
          simUI.setLabelText(ui, 30, tostring(score1)) -- 更新score的UI標籤
    else
        -- 如果時間到會暫停模擬
        sim.pauseSimulation()
    end
end</pre>
<p>可以將倒數計時器顯示出來，但計時器所減少的時間會比正常時間快好幾倍</p>
<p><img alt="" height="405" src="/downloads/ag10/20230414-3.png" width="720"/></p>
<p>bubbleRob_football 檔案 : <a href="/downloads/ag10/newbing_bubbleRob_football.ttt">bubbleRob_football_pj1ag10</a></p>
<p>加入連線對戰 bubbleRob_football 檔案 : <a href="/downloads/newbing_bubbleRob_football-2.ttt">bubbleRob_football-2_pj1ag10</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/N05LssWO1C8" title="YouTube video player" width="560"></iframe></p>
<p><span style="background-color: #00ffff;">連線remoteAPI程式註解</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"># 引入必要的模块
from zmqRemoteApi import RemoteAPIClient
import keyboard
import sim
import time
import simConst

# 打印程式啟動的訊息
print('Program started')

# 關閉所有已開啟的連線
sim.simxFinish(-1)

# 連接到遠端 API 伺服器
clientID = sim.simxStart('192.168.56.1', 19998, True, True, 5000, 5)

# 啟動仿真
sim.simxStartSimulation(clientID, sim.simx_opmode_oneshot_wait)

# 判斷是否成功連線到伺服器
if clientID != -1:
    print('Connected to remote API server')
else:
    print('Failed connecting to remote API server')

# 打印仿真開始的訊息
print('Simulation started')

# 取得左右輪子的控制句柄
errorCode, leftMotor = sim.simxGetObjectHandle(clientID, 'leftMotor2', sim.simx_opmode_oneshot_wait)
errorCode, rightMotor = sim.simxGetObjectHandle(clientID, 'rightMotor2', sim.simx_opmode_oneshot_wait)

# 設定 BubbleRob 的速度
def setBubbleRobVelocity(leftWheelVelocity, rightWheelVelocity):
    # 取得左右輪子的控制句柄
    errorCode, leftMotor = sim.simxGetObjectHandle(clientID, '/leftMotor2', sim.simx_opmode_oneshot_wait)
    errorCode, rightMotor = sim.simxGetObjectHandle(clientID, '/rightMotor2',sim.simx_opmode_oneshot_wait)
    # 設定左右輪子的目標速度
    sim.simxSetJointTargetVelocity(clientID, leftMotor, leftWheelVelocity, simConst.simx_opmode_streaming)
    sim.simxSetJointTargetVelocity(clientID, rightMotor, rightWheelVelocity, simConst.simx_opmode_streaming)

# 循環檢測鍵盤事件
while True:
    if keyboard.is_pressed('up'):
        # 按下"上"鍵，前進
        setBubbleRobVelocity(2.0, 2.0)
    elif keyboard.is_pressed('down'):
        # 按下"下"鍵，後退
        setBubbleRobVelocity(-2.0, -2.0)
    elif keyboard.is_pressed('left'):
        # 按下"左"鍵，左轉
        setBubbleRobVelocity(-2.0, 2.0)
    elif keyboard.is_pressed('right'):
        # 按下"右"鍵，右轉
        setBubbleRobVelocity(2.0, -2.0)
    elif keyboard.is_pressed('q'):
        # 按下"q"鍵，停止仿真
        sim.stopSimulation()
    else:
        # 沒有按下任何鍵，停止移動
        setBubbleRobVelocity(0.0, 0.0)</pre>
<p>此程式必須放在圖片紅色框框檔案中</p>
<p><img alt="" height="405" src="/downloads/ag10/20230416.png" width="720"/></p>
<p><span style="background-color: #00ffff;">啟動遠端API程式註解</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">-- The main script is not supposed to be modified, except in special cases.
require('defaultMainScript')
function sysCall_init()
simRemoteApi.start(19998) -- 啟動遠程 API，監聽端口號為 19998
end</pre>
<p><span style="background-color: #00ffff;">連線 API sensor 程式註解</span><br/><br/></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">--在這個函數中初始化變數，設置UI元素，並獲取物體的初始位置和方向
function sysCall_init()
score1 = 0 --初始化分數變量
count = 24000 --初始化計時器變量，代表比賽時間，這裡設置為24000，即400秒
sensor = sim.getObject('./sensor') --獲取名為"sensor"的接近傳感器
--創建UI元素，顯示分數和計時器
xml2 = [[
&lt;ui title="計分板" closeable="false" resizable="false" style="plastique"&gt;
&lt;label text="分數：" style="* {background-color: #808080; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px; }" id="20"/&gt;
&lt;label text="0" style="* {background-color: #FFF; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;}" id="30"/&gt;
&lt;/ui&gt;
]]
ui = simUI.create(xml2) --創建計分板UI
simUI.setPosition(ui, 0,0, true) --設置UI位置
xml3 = [[
&lt;ui title="計時器" closeable="false" resizable="false" style="plastique"&gt;
&lt;label text="400:00.0" style="* {background-color: #F00; color: #FFF; font-size: 32px; font-weight: bold; padding: 4px; border-radius: 4px;}" id="10"/&gt;
&lt;/ui&gt;
]]
ui2 = simUI.create(xml3) --創建計時器UI
simUI.setPosition(ui2, 900,0, true) --設置UI位置
--獲取機器人和球的句柄，以及它們的初始位置和方向
bubbleRob = sim.getObject('/bubbleRob')
ball = sim.getObject('/ball')
bubbleRob2 = sim.getObject('/bubbleRob2')
initialPosition = sim.getObjectPosition(bubbleRob, -1)
initialOrientation = sim.getObjectOrientation(bubbleRob, -1)
initialPosition2 = sim.getObjectPosition(bubbleRob2, -1)
initialOrientation2 = sim.getObjectOrientation(bubbleRob2, -1)
initialballPosition = sim.getObjectPosition(ball, -1)
initialballOrientation = sim.getObjectOrientation(ball, -1)
end

--在這個函數中實現比賽計時和計分邏輯
function sysCall_actuation() -- 讀取接近傳感器值
    result=sim.readProximitySensor(sensor)
    -- 檢查得分是否小於5
    if(score1&lt;5)then
        -- 檢查接近傳感器是否檢測到某物
        if(result&gt;0)then
            -- 增加得分並更新UI標籤
            score2 = score1+1
            simUI.setLabelText(ui, 30, tostring(score2))
            -- 重置對象的位置和方向
            sim.setObjectPosition(bubbleRob, -1, initialPosition)
            sim.setObjectOrientation(bubbleRob, -1, initialOrientation)
            sim.setObjectPosition(bubbleRob2, -1, initialPosition2)
            sim.setObjectOrientation(bubbleRob2, -1, initialOrientation2)
            sim.setObjectPosition(ball, -1, initialballPosition)
            sim.setObjectOrientation(ball, -1, initialballOrientation)
            -- 更新得分變量
            score1=score2
        end
    end
    if count &gt; 0 then -- 檢查計時器是否大於0
          count = count - 1 -- 減少倒數時間
          local minutes = math.floor(count / 60) -- 計算分鐘
          local seconds = count % 60 -- 計算秒數
          local timeStr = string.format("%d:%02d", minutes , seconds) -- 格式化時間字符串
          simUI.setLabelText(ui, 10, timeStr) -- 更新時間UI標籤
          simUI.setLabelText(ui, 30, tostring(score1)) -- 更新score的UI標籤
    else
        -- 如果時間到會暫停模擬
        sim.pauseSimulation()
    end
end</pre>
<p><span style="background-color: #00ffff;">連線 API sensor2 程式註解</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
        score1 = 0 -- 初始分數為 0
        sensor = sim.getObject('./sensor2')  -- 取得感測器物件
        xml = [[
             &lt;ui title="Scoreboard" closeable="false" resizable="false" style="plastique"&gt;
             &lt;label text="Score:" style="* {background-color: #808080; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px; }" id="40"/&gt;
             &lt;label text="0" style="* {background-color: #FFF; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;}" id="50"/&gt;
              &lt;/ui&gt;
        ]]  -- 創建 UI 界面
        ui = simUI.create(xml)  -- 顯示 UI 界面
        simUI.setPosition(ui, 1770,0, true)  -- 設定 UI 界面的位置
        bubbleRob = sim.getObject('/bubbleRob')  -- 取得 BubbleRob 物件
        ball = sim.getObject('/ball')  -- 取得球物件
        bubbleRob2 = sim.getObject('/bubbleRob2')  -- 取得第二個 BubbleRob 物件
        initialPosition = sim.getObjectPosition(bubbleRob, -1)  -- 取得 BubbleRob 初始位置
        initialOrientation = sim.getObjectOrientation(bubbleRob, -1)  -- 取得 BubbleRob 初始方向
        initialPosition2 = sim.getObjectPosition(bubbleRob2, -1)  -- 取得第二個 BubbleRob 初始位置
        initialOrientation2 = sim.getObjectOrientation(bubbleRob2, -1)  -- 取得第二個 BubbleRob 初始方向
        initialballPosition = sim.getObjectPosition(ball, -1)  -- 取得球的初始位置
        initialballOrientation = sim.getObjectOrientation(ball, -1)  -- 取得球的初始方向
end

function sysCall_actuation()
     --simUI.setLabelText(ui, 30, tostring(sim.getFloatSignal("myVariable")))
     result=sim.readProximitySensor(sensor) -- 讀取感測器的值
     if(score1&lt;5)then -- 如果分數小於 5 分
       if(result&gt;0)then -- 如果感測器的值大於 0
        score2 = score1+1 -- 分數加 1
        simUI.setLabelText(ui, 50, tostring(score2)) -- 更新分數顯示
        sim.setObjectPosition(bubbleRob, -1, initialPosition)  -- 將 BubbleRob 重置到初始位置
        sim.setObjectOrientation(bubbleRob, -1, initialOrientation)  -- 將 BubbleRob 重置到初始方向
        sim.setObjectPosition(bubbleRob2, -1, initialPosition2)  -- 將第二個 BubbleRob 重置到初始位置
        sim.setObjectOrientation(bubbleRob2, -1, initialOrientation2)  -- 將第二個 BubbleRob 重置到初始方向
        sim.setObjectPosition(ball, -1, initialballPosition)  -- 將 Ball 重置到初始位置
        sim.setObjectOrientation(ball, -1, initialballOrientation)  -- 將 Ball 重置到初始方向
        -- 將score1設置為score2
        score1=score2
        end
    else
        -- 如果分數達到5，則暫停模擬
        sim.pauseSimulation()
    end
end</pre>
<p></p>
<p>所有檔案壓縮檔：<a href="/downloads/bubbleRob football 2a-pj1ag10.7z">bubbleRob football 2a-pj1ag10.7z</a></p>
<p>製作心得：</p>
<p>製作bubbleRobTutorial時遇到不少問題，如:軸在裝配時選轉方向設置顛倒，導致bubbleRobTutorial 模擬後變成倒著跑，也有遇到只會在原地轉的，還有名稱大小寫打錯導致程式無法運行，但後來都有順利解決。因為參考資料是英文，所以在製作過程中遇到英文單字看不懂或無法理解他的意思，需要上網參考資料才能理解。在製作記分板時詢問了同學才知道他是利用xml創建UI界面將計分板顯示出來，並且利用了Lua函數中的回調函數，該函數中，可以讀取和設置模型的狀態，而計時器也是一樣利用UI界面，並且在回函樹中設置時間到會停止模擬，也學習到了CoppeliaSim的remoteApi實際運作的流程。</p>
<p></p>
<h2>ag11</h2>
<p>ag11倉儲:<a href="https://github.com/mdecd2023/2a-pj1ag11">https://github.com/mdecd2023/2a-pj1ag11</a></p>
<p>ag11網頁:<a href="https://mdecd2023.github.io/2a-pj1ag11/content/index.html">https://mdecd2023.github.io/2a-pj1ag11/content/index.html</a></p>
<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #000000; font-family: Quicksand, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ESZDNiA_DBVPnOtGrwqy0VIBC_Kj701ebfCMFrvr_sF1EA?e=NUw6pm" style="box-sizing: border-box; color: #212226; text-decoration: none; background-color: transparent; transition: all 0.2s ease-out 0s; font-weight: 400; border-bottom: 1px solid #f26a3d;">2023_remoteapi_bubbleRob.7z</a><span> </span>(<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ee_4--aOPRtFkVYTKFU6qUgBq1SPwK6nixKOX61zMBeZsw?e=TbbREn" style="box-sizing: border-box; color: #212226; text-decoration: none; background-color: transparent; transition: all 0.2s ease-out 0s; font-weight: 400; border-bottom: 1px solid #f26a3d;">2aw6 如何在 chatGPT 協助下開發 remote API 控制程式.mp4</a>)</p>
<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #000000; font-family: Quicksand, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/Ee74da1clrdAn49V_Az20_kBt4MBo_GcbjQj3hu5gIzP8w?e=D4n14Q" style="box-sizing: border-box; color: #212226; text-decoration: none; background-color: transparent; transition: all 0.2s ease-out 0s; font-weight: 400; border-bottom: 1px solid #f26a3d;">透過鍵盤控制 bubbleRob 的場景與 remote API 程式.7z</a><span> </span>(<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EfKKLx6WMHNKn0A8EXT7H2wBYZLVW2MyDocik-sZnpuZzg?e=m8TENv" style="box-sizing: border-box; color: #212226; text-decoration: none; background-color: transparent; transition: all 0.2s ease-out 0s; font-weight: 400; border-bottom: 1px solid #f26a3d;">示範操作影片.mp4</a>)</p>
<p>利用newbing_bubbleRob_remoteapi1.py &gt;tools&gt;go 執行程式</p>
<p>並且下載pip install keyboard 才可利用鍵盤控制bubbleRob執行前進 , 後退和左右等指令來操控機器人</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/bJteQZypPm0" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>製作球場步驟與sensor</p>
<p></p>
<script>
var winkVideoData7 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData7" height="580" muted="true" width="1000">
<source src="./../downloads/ag11/0327.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass">導入記分板與更改錯誤</div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
</div>
</div>
<script>
var winkVideoData8 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData8" height="580" muted="true" width="1000">
<source src="./../downloads/ag11/0410.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass">sensor,球與本體的偵測錯誤</div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
</div>
</div>
<script>
var winkVideoData9 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData9" height="580" muted="true" width="1000">
<source src="./../downloads/ag11/0410-2.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass">修正sensor,球體與本體之錯誤(可正常執行遊玩)</div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
</div>
</div>
<script>
var winkVideoData11 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData11" height="580" muted="true" width="1000">
<source src="./../downloads/ag11/0410-3.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
</div>
</div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/knIP8Pfp9sQ" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>程式下載 : <a href="/downloads/0410.ttt">football程式</a></p>
<p></p>
<p>football 製作心得 :</p>
<p>在製作本次的football作業時，有遇到一些問題，有關於sensor,記分板,與本體偵測與球體偵測的問題，遇到最嚴重的問題是球體偵測的問題，因為沒有辦法找到程式中球體的正確數值，所以都無法偵測球體的得分，所以尋求的同學的幫助，在程式中加了關於球的檢測數值，再導入程式中的數值，就可以正常的運行並遊玩了。</p><h2>ag12</h2>
<p><span>2a-pj1ag2組員:41023114 王樟皓 41023126 卓桓琮</span></p>
<p>github倉儲 :<a href="https://github.com/mdecd2023/2a-pj1ag12.git">https://github.com/mdecd2023/2a-pj1ag12.git</a></p>
<p>個人網站 :<a href="https://mdecd2023.github.io/2a-pj1ag12/content/index.html">https://mdecd2023.github.io/2a-pj1ag12/content/index.html</a></p>
<p><strong>Process </strong></p>
<p><span><strong>Step1</strong>:建立足球場景，透過onshape繪出足球的場景，足球分成兩部分第一部分為足球的牆壁第二部分為球門。足球的牆壁:</span><a href="https://cad.onshape.com/documents/1ef9bb78edd5251adafdfbeb/w/0699139f42c9ebc4817c6156/e/20413e231639dd10dc11bb42?renderMode=0&amp;uiState=643a420fb4776c6d78624f23">wall</a><span> 球門:</span><a href="https://cad.onshape.com/documents/a377cc4e5b1ef7cab53572bc/w/239bf2d6c24d9f9c80b7a628/e/20ebee5effb2f8812f5d7e8a?renderMode=0&amp;uiState=643a427646ce454f67f78abb">door</a></p>
<p><span><strong>Step2</strong>:轉成STL檔匯入coppaliasim場景中，放入先前製作的bobbleRob robot，並複製兩個在場景中，加入球體 過程:<a href="https://youtu.be/Rc-BSnYI17w">https://youtu.be/Rc-BSnYI17w</a></span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Rc-BSnYI17w" width="560"></iframe></span></p>
<p><span><strong>Step3</strong>:設定coppliasim中的參數</span></p>
<p><span>1.在兩個球門上加入感應sensor，以感測是否進球，將兩個seonsor拉到球門底下</span></p>
<p><span><img alt="" height="313" src="/images/pj1-note1.png" width="556"/></span></p>
<p><span>2.設定ball的參數</span></p>
<p>
<script>
var winkVideoData_41023126 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
</p>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_41023126" height="630" muted="true" width="1008">
<source src="./../downloads/ag12/pj1-ball.mp4" type="video/mp4"/></video></div>
<p><span></span>3.bubbleRob robot 參數設定:<a href="https://mdecd2023.github.io/2a-pj1ag12/content/%E8%A3%BD%E4%BD%9C%E9%81%8E%E7%A8%8B.html">bubbleRob</a></p>
<p><span><strong>Step4</strong>:加入sensor程式碼-利用chatgpt 寫出程式碼-計時器(記分板-參考至ag2)</span></p>
<p><span>文字檔:<a href="/downloads/ag12/sensor-program.txt">sensor-program</a></span></p>
<p><span><img alt="" height="393" src="/images/pj1-note4.png" width="469"/></span></p>
<p><span><img alt="" height="450" src="/images/pj1-note5.png" width="482"/></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    score1 = 0
    remaining_time = 60 -- 1 minute
    sensor = sim.getObject('./sensor')
    xml = [[        <ui closeable="false" resizable="false" title="Scoreboard">            <label id="10" style="* {background-color: #808080; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;" text="Score:"></label>            <label id="30" style="* {background-color: #1E90FF; color: #ffffff; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;" text="0"></label>            <label id="40" style="* {background-color: #808080; color: #000000; font-size: 20px; font-weight: bold; padding: 5px; border-radius: 5px;" text="Time left: 60s"></label>        </ui>    ]]
    ui = simUI.create(xml)
    simUI.setPosition(ui, 0,0, true)
    bubbleRob1 = sim.getObject('/bubbleRob1')
    ball = sim.getObject('/ball')
    bubbleRob2 = sim.getObject('/bubbleRob2')
    initialPosition = sim.getObjectPosition(bubbleRob1, -1)
    initialOrientation = sim.getObjectOrientation(bubbleRob1, -1)
    initialPosition2 = sim.getObjectPosition(bubbleRob2, -1)
    initialOrientation2 = sim.getObjectOrientation(bubbleRob2, -1)
    initialballPosition = sim.getObjectPosition(ball, -1)
    initialballOrientation = sim.getObjectOrientation(ball, -1)
end

function sysCall_actuation()
    -- read the proximity sensor value
    result=sim.readProximitySensor(sensor)
    -- check if the remaining time is greater than 0
    if(remaining_time &gt; 0) then
        -- check if the proximity sensor detects something
        if(result&gt;0) then
            -- increase the score and update the UI label
            score2 = score1+1
            simUI.setLabelText(ui, 30, tostring(score2))
            -- reset the objects' positions and orientations
            sim.setObjectPosition(bubbleRob1, -1, initialPosition)
            sim.setObjectOrientation(bubbleRob1, -1, initialOrientation)
            sim.setObjectPosition(bubbleRob2, -1, initialPosition2)
            sim.setObjectOrientation(bubbleRob2, -1, initialOrientation2)
            sim.setObjectPosition(ball, -1, initialballPosition)
            sim.setObjectOrientation(ball, -1, initialballOrientation)
            -- update the score variable
            score1=score2
        end
        -- update the remaining time and the UI label
        remaining_time = remaining_time - sim.getSimulationTimeStep()
        simUI.setLabelText(ui, 40, "Time left: "..math.floor(remaining_time).."s")
    else
        sim.stopSimulation()
    end
end</pre>
<p><span><strong>第二版 sersor 程式碼 </strong></span></p>
<p>文字檔:<a href="/downloads/ag12/sensor-program2.txt">sensor-program2</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    score1 = 0
    remaining_time = 1200 -- 20 minute
    sensor = sim.getObject('./sensor1')
    xml = [[        <ui closeable="false" resizable="false" title="Scoreboard">            <label id="10" style="* {background-color: #808080; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;" text="Score:"></label>            <label id="30" style="* {background-color: #1E90FF; color: #ffffff; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;" text="0"></label>            <label id="40" style="* {background-color: #d91111; color: #000000; font-size: 20px; font-weight: bold; padding: 5px; border-radius: 5px;" text="Time left: 60s"></label>        </ui>    ]]
    ui = simUI.create(xml)
    simUI.setPosition(ui, 0,0, true)
    bubbleRob1 = sim.getObject('/bubbleRob1')
    ball = sim.getObject('/ball')
    bubbleRob2 = sim.getObject('/bubbleRob2')
    initialPosition = sim.getObjectPosition(bubbleRob1, -1)
    initialOrientation = sim.getObjectOrientation(bubbleRob1, -1)
    initialPosition2 = sim.getObjectPosition(bubbleRob2, -1)
    initialOrientation2 = sim.getObjectOrientation(bubbleRob2, -1)
    initialballPosition = sim.getObjectPosition(ball, -1)
    initialballOrientation = sim.getObjectOrientation(ball, -1)
end

function sysCall_actuation()
    -- read the proximity sensor value
    result=sim.readProximitySensor(sensor)
    -- check if the remaining time is greater than 0
    if(remaining_time &gt; 0) then
        -- check if the proximity sensor detects something
        if(result&gt;0) then
            -- increase the score and update the UI label
            score2 = score1+1
            simUI.setLabelText(ui, 30, tostring(score2))
            -- reset the objects' positions and orientations
            sim.setObjectPosition(bubbleRob1, -1, initialPosition)
            sim.setObjectOrientation(bubbleRob1, -1, initialOrientation)
            sim.setObjectPosition(bubbleRob2, -1, initialPosition2)
            sim.setObjectOrientation(bubbleRob2, -1, initialOrientation2)
            sim.setObjectPosition(ball, -1, initialballPosition)
            sim.setObjectOrientation(ball, -1, initialballOrientation)
            -- update the score variable
            score1=score2
        end
        -- update the remaining time and the UI label
        remaining_time = remaining_time - sim.getSimulationTimeStep()
        simUI.setLabelText(ui, 40, "Time left: "..math.floor(remaining_time).."s")
    else
        sim.stopSimulation()
    end
end</pre>
<p><span><strong></strong></span></p>
<p><span><strong>Step5</strong>:打開小白窗 加入程式碼 按go</span></p>
<p><span>文字檔:<a href="/downloads/ag12/senser1-whiteboard-program.txt">whitewindow</a></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># pip install pyzmq cbor
from zmqRemoteApi import RemoteAPIClient
import keyboard

client = RemoteAPIClient('localhost', 23000)

print('Program started')
sim = client.getObject('sim')
sim.startSimulation()
print('Simulation started')

def setBubbleRobVelocity(leftWheelVelocity, rightWheelVelocity):
    leftMotor = sim.getObject('/leftMotor')
    rightMotor = sim.getObject('/rightMotor')
    sim.setJointTargetVelocity(leftMotor, leftWheelVelocity)
    sim.setJointTargetVelocity(rightMotor, rightWheelVelocity)

'''
# Example usage 1:
setBubbleRobVelocity(1.0, 1.0)
time.sleep(2)
setBubbleRobVelocity(0.0, 0.0)
'''
# use keyborad to move BubbleRob

while True:
    if keyboard.is_pressed('up'):
        setBubbleRobVelocity(1.0, 1.0)
    elif keyboard.is_pressed('down'):
        setBubbleRobVelocity(-1.0, -1.0)
    elif keyboard.is_pressed('left'):
        setBubbleRobVelocity(-1.0, 1.0)
    elif keyboard.is_pressed('right'):
        setBubbleRobVelocity(1.0, -1.0)
    elif keyboard.is_pressed('q'):
        # stop simulation
        sim.stopSimulation()
    else:
        setBubbleRobVelocity(0.0, 0.0)</pre>
<p><strong>在football的場景加入計時器和記分板 過程:<a href="https://youtu.be/EZ_mE9P4j-s">https://youtu.be/EZ_mE9P4j-s</a></strong></p>
<p><strong>第一版</strong></p>
<p><strong></strong></p>
<p><img alt="" height="283" src="/images/pj1-note3.png" width="505"/></p>
<p></p>
<p><img alt="" height="267" src="/images/pj1-note2.png" width="508"/></p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Dnn487BBg2E" width="560"></iframe></p>
<p><strong></strong></p>
<p><strong>第二版</strong></p>
<p><strong></strong></p>
<p><strong><img alt="" height="444" src="/images/pj1-note11.png" width="790"/></strong></p>
<p></p>
<p><img alt="" height="426" src="/images/pj1-note10.png" width="757"/></p>
<p></p>
<p><strong></strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Js30bBYL3Wk" width="560"></iframe><br/></strong></p>
<p><strong></strong></p>
<p><strong>Step6</strong>:連線對戰</p>
<p>1.查詢ipconfig 找到ipv4埠號 </p>
<p><img alt="" height="343" src="/images/pj1-note6.png" width="544"/></p>
<p>2.將自己ipv4埠號複製到小白窗的程式中</p>
<p><img alt="" height="404" src="/images/pj1-note7.png" width="338"/></p>
<p><img alt="" height="344" src="/images/pj1-note8.png" width="272"/></p>
<p>3.開始兩人對戰</p>
<p><img alt="" height="252" src="/images/pj1-note9.png" width="448"/></p>
<p></p>
<p>Final:連線對打未完成 都有設定 防火牆也有關 但是對方就連不到</p>
<p>連線失敗過程:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/hoakN4USk7A" width="560"></iframe></p>
<p></p>
<p>football.ttt檔:<a href="/downloads/ag12/pj1-football.ttt">pj1-football</a></p>
<p>41023126心得:我覺得在最後的連線模擬比較可惜沒有成功，但是在過程學到，如何使用chatgpt 在過程學會如何問chatgpt問題，因為不同的問法會有不同的結果，問的正確會給出你要的解答，問的不好它會給出你不想要的解答，在繪圖的過程中可以訓練大腦的空間能力和英文能力，最後也感謝幫忙的同學們。</p>
<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>
<p><span>41023114心得:我認為在這次的計畫中，有大部分的問題都能交給chatgpt回答，但跟組長有一樣的情況，問的方法變成了我們的這次的困擾，不過相較之下比我們自己解決要好得多，多問幾次，了解其中的關鍵說法，在重複問的過程中也能組合曾經不太理解的字彙，也感謝願意幫助我們的同學。</span></p>
<p>=======</p>
<h2>ag13</h2>
<p><span>2a-pj1ag13組員:41023133、41023140</span></p>
<p>pj1ag4倉儲:<a href="https://github.com/mdecd2023/2a-pj1ag13.git">https://github.com/mdecd2023/2a-pj1ag13.git</a></p>
<p>pj1ag4網頁:<a href="https://mdecd2023.github.io/2a-pj1ag13/content/index.html">https://mdecd2023.github.io/2a-pj1ag13/content/index.html</a></p>
<p></p>
<p>用鍵盤控制<a href="/downloads/BubbleRob13.ttt">BubbleRob</a>:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/eCp3avFJlRc" title="YouTube video player" width="560"></iframe></p>
<p></p>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()  
    right_wheel= sim.getObjectHandle('joint1') 
    left_wheel= sim.getObjectHandle('joint2') 
    right_velocity=0 
    left_velocity=0
    speed=5
    sim.setJointTargetVelocity(right_wheel,0)
    sim.setJointTargetVelocity(left_wheel,0)
 
end
  
function sysCall_actuation()  
    message,auxiliaryData=sim.getSimulatorMessage() 
    while message~=-1 do
        if (message==sim.message_keypress) then
            
            if (auxiliaryData[1]==32) then

                right_velocity=0 
                left_velocity=0 
                sim.setJointMaxForce(right_wheel, 0) 
                sim.setJointMaxForce(left_wheel, 0) 
                break
            else
                sim.setJointMaxForce(right_wheel, 10) 
                sim.setJointMaxForce(left_wheel, 10)
            
            
                if (auxiliaryData[1]==2007) then -- up key
                    
                    sim.setJointTargetVelocity(right_wheel,speed)
                    sim.setJointTargetVelocity(left_wheel,speed)
                end
                if (auxiliaryData[1]==2008) then -- down key
                    
                    sim.setJointTargetVelocity(right_wheel,-speed/2)
                    sim.setJointTargetVelocity(left_wheel,-speed/2)
                    
                end
                if (auxiliaryData[1]==2009) then -- left key
                    sim.setJointTargetVelocity(right_wheel,speed)
                    sim.setJointTargetVelocity(left_wheel,speed/2)
                   
                end
                if (auxiliaryData[1]==2010) then -- right key
                    sim.setJointTargetVelocity(right_wheel,speed/2)
                    sim.setJointTargetVelocity(left_wheel,speed)
                    
                end

            end
        end
        message,auxiliaryData=sim.getSimulatorMessage()
    end
end</pre>
<p></p>
<p>football場景設置:</p>
<p>繪製過程</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_w2_1" height="600" muted="true" width="800"><source src="/downloads/ag13/pj13.mp4" type="video/mp4"/></video></div>
<p><img alt="" height="535" src="/images/football.png" width="951"/></p>
<p><a href="/downloads/football%20scene.stl">足球場NX.stl</a></p>
<p></p>
<p>foodball的coppeliasim機器人對戰:</p>
<p><img alt="" height="529" src="/images/0423_13.png" width="941"/></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/z7689B4Zzpo" title="YouTube video player" width="560"></iframe></p>
<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>
<p><a href="/downloads/0423%2013.ttt">機器人對戰Coppeliasim.ttt</a></p>
<p></p>
<p></p><h2>ag14</h2>
=======
<p>因為Wink尚未做好，所以先以圖片來顯示作業進度</p>
<h2>ag14</h2>
&gt;&gt;&gt;&gt;&gt;&gt;&gt; 45c90e176faa381a420f09ab486603645beb5f94
<p></p>
<p><a href="/downloads/ag14/ag14_cd_report.pdf">ag14_cd_report.pdf</a></p>
<p><strong>球場及感測器建立</strong></p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_w2_1" height="600" muted="true" width="800"><source src="/downloads/ag14/football.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"><br/>
<p><strong>加入bubbleRob及球</strong></p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_w2_1" height="600" muted="true" width="800"><source src="/downloads/ag14/football2.mp4" type="video/mp4"/></video></div>
</div>
<div class="winkVideoContainerClass"><a href="/downloads/ag14/fotball2.ttt">球場、感測器、球、bubbleRob</a></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/cmsimde/static" data-varname="winkVideoData_w2_1" height="600" muted="true" width="800"><source src="/downloads/ag14/415.mp4" type="video/mp4"/></video></div>
<p><strong><a href="/downloads/ag14/fotball2-連線.ttt">球場連線</a>，<a href="/downloads/ag14/1998.7z">19998.7z</a></strong></p>
<p><strong><img alt="" height="134" src="/images/螢幕擷取畫面 2023-04-16 103410.png" width="539"/></strong></p>
<p>simRemoteApi.start(19998)：這個語句呼叫了名為simRemoteApi的函數並傳入了一個參數19998。這個函數是用於啟動一個遠端 API 服務，這個服務會在本地電腦上啟動一個端口為 19998 的服務。</p>
<p>simRemoteApi.start(23020)：這個語句呼叫了同樣的simRemoteApi函數並傳入了一個參數23020。這個函數是用於啟動另外一個遠端 API 服務，這個服務會在本地電腦上啟動一個端口為 23020 的服務，也就是我們可以看到coppeliasim的網頁視窗。</p>
<p><img alt="" height="135" src="/images/螢幕擷取畫面 2023-04-16 103755.png" width="535"/><code>print(sim.getObject('./rightMotor'))</code>：這個語句呼叫了<code>sim.getObject()</code>函數並傳入了一個字串參數<code>'./rightMotor'</code>。這個函數是用於獲取場景中指定名稱的物體也就是我們的右馬達。<code>print()</code>函數則是用於將獲取到的物體對象打印出來，以便進一步進行調試或是測試。</p>
<p><code>print(sim.getObject('./leftMotor'))</code>：這個語句和第一個語句類似，只是傳入的參數不同，這個函數是用於獲取場景中另一個名稱為<code>leftMotor</code>的物體也就是左馬達。</p>
<p><code>print(sim.getObject('.'))</code>：這個語句呼叫了<code>sim.getObject()</code>函數並傳入了一個字串參數<code>'.'</code>。這個參數代表獲取當前場景中的根對象。這個函數用於獲取當前場景的根對象，以便進行對場景的操作或是進一步獲取子對象。</p>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr" id="tw-target-text"><span class="Y2IQFc" lang="zh-TW">函數 sysCall_init() 用於初始化仿真環境和一些變量，而函數 sysCall_actuation() 用於執行機器人的運動和動作<br/>，以及更新計時器和得分標籤的顯示。<br/></span><span class="Y2IQFc" lang="zh-TW"><img alt="" height="234" src="/images/螢幕擷取畫面 2023-04-16 112518.png" width="551"/><br/>sensor1 和 sensor2 變量是用來存儲兩個傳感器的句柄，這些傳感器可能被機器人用來檢測周圍環境。 bubbleRobBase 變量存儲了機器人的基座句柄。 ball 變量存儲了一個球的句柄。 initialBubbleRobPosition 和 initialBubbleRobOrientation 分別是機器人基座的初始位置和方向。 initialballPosition 和 initialballOrientation 分別是球的初始位置和方向。<br/><img alt="" height="106" src="/images/螢幕擷取畫面 2023-04-16 112944.png" width="391"/><br/></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr" id="tw-target-text"><span class="Y2IQFc" lang="zh-TW">這段代碼用於進行一些初始化操作。具體來說，我們將一個名為 count 的變量初始化為 18000，<br/>這個變量用於存儲倒計時的剩餘時間，單位為秒。我們還將 score1 和 score2 變量初始化為 0，<br/>這兩個變量用於表示兩個玩家的得分。</span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr"><span class="Y2IQFc" lang="zh-TW"> <img alt="" height="109" src="/images/螢幕擷取畫面 2023-04-16 113618.png" width="1008"/></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr"><span class="Y2IQFc" lang="zh-TW">這段程式碼是用來建立一個使用者介面(UI)，讓使用者可以看到遊戲時間和兩方的得分。<br/>程式中使用了XML格式的字串來定義介面的樣式，其中包括了三個標籤(Label)，分別是時間、玩家1得分和玩家2得分<br/>並為每個標籤(Label)指定了一個唯一的識別碼(ID)。 程式中的 [[ ... ]] 語法是 Lua 的多行字串表示法，可以方便地在一段文字中包含多行內容。<br/>在這裡使用 [[ ... ]] 語法定義了一個名為 xml 的多行字串，這個字串中包含了UI元素的定義。 接下來，程式呼叫 simUI.create(xml) 方法來創建一個使用者介面，ui 變數存儲了返回值，這個返回值是介面的識別碼(ID)。<br/>接著，程式呼叫</span><span class="Y2IQFc" lang="zh-TW">simUI.setPosition(ui, 0,0, true) 方法來設定介面的位置，這裡將介面的位置設定為左上角，即 x 和 y 座標都為 0。</span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr"><span class="Y2IQFc" lang="zh-TW"> <img alt="" height="741" src="/images/螢幕擷取畫面 2023-04-16 115021.png" width="850"/><br/></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr" id="tw-target-text"><span class="Y2IQFc" lang="zh-TW">接下來是 sysCall_actuation() 函數，這個函數會在每一幀被調用。這個函數會檢測兩個門的狀態，如果某個門被打開了，那麼就暫停遊戲，並重置機器人和球的位置，以及增加對應玩家的得分。<br/>另外，如果遊戲時間已經用完，那麼也會停止遊戲。在每一幀結束時，還會更新遊戲時間和得分在用戶界面上的顯示。 最後，需要注意的是，這些代碼並不是獨立運行的，而是作為一段代碼塊被嵌入到了一個名為 BubbleRob 的場景中。因此，在運行這段代碼之前，需要先打開這個場景。</span><span class="Y2IQFc" lang="zh-TW"><br/><br/></span></pre>
<p><strong><img alt="" height="560" src="/images/螢幕擷取畫面 2023-04-16 100712.png" width="1154"/></strong></p>
<p><strong></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/xQ6aT4KyqJU" title="YouTube video player" width="560"></iframe></p>
<p><strong>其實在製作bubbleRob時我們就碰到了好多問題，像是語言不通，不知道該如何修改等等，不過在通過與組員的互相討論以及與其他組的共同合作，一起互相教導及幫助中，完成了許多一個人無法獨自完成的東西，在這當中我們也學習了許多，不僅僅是製作以及協同方面，也有許多的知識是從同學身上學習到的，這也讓我們了解到了，為什麼需要學習協同設計，一方面是讓我們理解設計不僅僅只是一個人在製作，許多時候需要因應客戶的各種需求而對我們的設計進行改變，另一方面是讓我們理解，只要團隊組員之間調配的好，那麼合作起來的實力是非常之大的，所以在這次的製作中，我們以之前製作bubbleRob調配出來的合作方式，在這次的工作中，雖然有遇到問題，不過都有透過合作成功化解，並且在各自分配的工作中，都成功做出成品。</strong></p>
<h2>ag15</h2>
<p>成員:41023154張韋翔、41023135林政蔚</p>
<p>倉儲:<a href="https://github.com/mdecd2023/2a-pj1ag15">https://github.com/mdecd2023/2a-pj1ag15</a></p>
<p>網站:<a href="https://mdecd2023.github.io/2a-pj1ag15/content/index.html">https://mdecd2023.github.io/2a-pj1ag15/content/index.html</a> </p>
<p>-W9:目標是利用兩台 BubbleRob 雙輪車在一足球場景中進行對戰, 其中在雙方球門設置感測器, 雙方各有一名 BubbleRob 負責運球, 在規定時間內, 每進一球後, 即透過程式重新從球場中線發球重啟賽局. 其中各組必須設法配置計分板顯示比賽剩餘時間與比分.<br/><br/><br/></p>
<p>建立球場:</p>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData1" height="630" muted="true" width="1008">
<source src="/downloads/ag15/field.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass">微改球場:<br/>兩側空位可能會導致球卡住，因此將其填起來。</div>
<div class="winkVideoContainerClass"><img alt="" height="671" src="/images/football.png" width="1279"/><br/>新增感測器:</div>
<div class="winkVideoContainerClass"></div>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData1" height="630" muted="true" width="1008">
<source src="/downloads/ag15/football_sensor.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass">感測器-計分板:</div>
<div class="winkVideoContainerClass">
<pre class="brush:lua" contenteditable="false">function sysCall_init()
    score1 = 0
      
    sensor = sim.getObject('./sensor')
    xml = [[
        &lt;ui title="Scoreboard" closeable="false" resizable="false" style="plastique"&gt;
        &lt;label text="Score:" style="* {background-color: #808080; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px; }" id="10"/&gt;
        &lt;label text="0" style="* {background-color: #FFF; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;}" id="30"/&gt;
       
        &lt;/ui&gt;
    ]]
    ui = simUI.create(xml)
    simUI.setPosition(ui, 200,0, true)
    bubbleRob = sim.getObject('/bubbleRob')
    ball = sim.getObject('/ball')
    bubbleRob2 = sim.getObject('/bubbleRob2')
    initialPosition = sim.getObjectPosition(bubbleRob, -1)
    initialOrientation = sim.getObjectOrientation(bubbleRob, -1)
    initialPosition2 = sim.getObjectPosition(bubbleRob2, -1)
    initialOrientation2 = sim.getObjectOrientation(bubbleRob2, -1)
    initialballPosition = sim.getObjectPosition(ball, -1)
    initialballOrientation = sim.getObjectOrientation(ball, -1)
  
end
  
  
function sysCall_actuation()
    --simUI.setLabelText(ui, 30, tostring(sim.getFloatSignal("myVariable")))
    result=sim.readProximitySensor(sensor)
    if(score1&lt;5)then
        if(result&gt;0)then
            score2 = score1+1
            simUI.setLabelText(ui, 30, tostring(score2))
  
            sim.setObjectPosition(bubbleRob, -1, initialPosition)
            sim.setObjectOrientation(bubbleRob, -1, initialOrientation)
            sim.setObjectPosition(bubbleRob2, -1, initialPosition2)
            sim.setObjectOrientation(bubbleRob2, -1, initialOrientation2)
            sim.setObjectPosition(ball, -1, initialballPosition)
            sim.setObjectOrientation(ball, -1, initialballOrientation)
            score1=score2
        end
    else
        sim.pauseSimulation()
    end
end</pre>
</div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass"><br/>計分板+計數器:</div>
<div class="winkVideoContainerClass">
<pre class="brush:lua" contenteditable="false">function sysCall_init()
    score1 = 0 
    count = 60000
    sensor = sim.getObject('./sensor')
    xml = [[
            &lt;ui title="Scoreboard" closeable="false" resizable="false" style="plastique"&gt;
              &lt;label text="60:00.0" style="* {background-color: #F00; color: #FFF; font-size: 32px; font-weight: bold; padding: 4px; border-radius: 4px;}" id="10"/&gt;
              &lt;label text="p1 Score:" style="* {background-color: #808080; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px; }" id="20"/&gt;
              &lt;label text="0" style="* {background-color: #FFF; color: #000000; font-size: 40px; font-weight: bold; padding: 5px; border-radius: 5px;}" id="30"/&gt;
            &lt;/ui&gt;
          ]]
    ui = simUI.create(xml)
    simUI.setPosition(ui, 0, 0, true)
    bubbleRob = sim.getObject('/bubbleRob')
    ball = sim.getObject('/ball')
    initialPosition = sim.getObjectPosition(bubbleRob, -1)
    initialOrientation = sim.getObjectOrientation(bubbleRob, -1)
    initialballPosition = sim.getObjectPosition(ball, -1)
    initialballOrientation = sim.getObjectOrientation(ball, -1)
     
end
 
function sysCall_actuation() 
    result=sim.readProximitySensor(sensor)
    if(score1&lt;5)then
        if(result&gt;0)then
            score2 = score1+1
            simUI.setLabelText(ui, 30, tostring(score2))
            sim.setObjectPosition(bubbleRob, -1, initialPosition)
            sim.setObjectOrientation(bubbleRob, -1, initialOrientation)
            sim.setObjectPosition(ball, -1, initialballPosition)
            sim.setObjectOrientation(ball, -1, initialballOrientation)
            score1=score2
        end
    end
    if count &gt; 0 then 
          count = count - 1 
          local minutes = math.floor(count / 60) 
          local seconds = count % 60 
          local timeStr = string.format("%d:%02d", minutes , seconds)
          simUI.setLabelText(ui, 10, timeStr) 
          simUI.setLabelText(ui, 30, tostring(score1)) 
    else
        sim.pauseSimulation()
    end
end</pre>
</div>
<div class="winkVideoContainerClass"></div>
<div class="winkVideoContainerClass">新增計分器和計時器:</div>
<div class="winkVideoContainerClass"></div>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData1" height="630" muted="true" width="1008">
<source src="/downloads/ag15/scoring.mp4" type="video/mp4"/></video></div>
<div class="winkVideoContainerClass"></div>
<p>遊玩影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/65ZhqaNn9kw" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>41023154心得:最後連線遊玩的部分沒有做出來，過程中感測器沒辦法感測的問題和上傳問題一開始有透過chatgpt來問問題，但可能是我問的方式不太對，chatgpt的回應都跟我要的答案不太一樣，後面通過問同學的方式解決了，感謝幫助我們的同學。</p>
<p>41023135林政蔚心得:pj1遇到問題大部分都問ChatGPT，尤其是程式碼，像是記分板的程式碼。不過在問GPT的時候常常會出現無法使用的一些細微錯誤，還要找出其中錯誤的點。</p>
<p></p>
<h2>ag17</h2>
<p>2a-pj1ag17組員:41023120呂昕叡、41023118吳政憲</p>
<p>pj1倉儲:<a href="https://github.com/mdecd2023/2a-pj1ag17">https://github.com/mdecd2023/2a-pj1ag17</a></p>
<p>pj1網頁:<a href="https://mdecd2023.github.io/2a-pj1ag17/content/football.html">https://mdecd2023.github.io/2a-pj1ag17/content/football.html</a></p>
<p>製作足球場 <a href="/get_page/ag17/downloads/ag17/football.stl">onshape檔案</a></p>
<p><a href="/get_page/downloads/ag17/footboll1.ttt">CoppeliaSim檔案</a></p>
<p><span style="color: #000000; font-family: Quicksand, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">
<script>
var winkVideoData11 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
</span></p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData11" height="630" muted="true" width="1008">
<source src="./../downloads/ag17/football.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoOverlayClass">導入主程式和記分板</div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<p><span style="color: #000000; font-family: Quicksand, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">
<script>
var winkVideoData12 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
</span></p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData12" height="630" muted="true" width="1008">
<source src="./../downloads/ag17/football3.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"><a href="/get_page/downloads/ag17/footboll FINAL.ttt">football檔案</a></div>
<div class="winkVideoOverlayClass">查詢IP位址</div>
<div class="winkVideoOverlayClass">
<div class="RqBzHd">
<ol class="X5LH0c">
<li class="TrT0Xe">按下Windows + R 開啟「執行」視窗後，輸入「cmd」後點選確定。</li>
<li class="TrT0Xe">系統自動開啟「命令提示字元」視窗，接下來輸入「ipconfig /all」並按Enter。</li>
<li class="TrT0Xe">在「IPv4」位址後面就是電腦目前的<b>IP</b>位址。</li>
</ol>
</div>
</div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass">心得:我們因為實在不知道怎麼打記分板的程式所以參考了同學的程式,結果根本不知道要如何更改本來只有一條程式錯結果越用越多錯,所以直接去請教了同學,經過他的解答和解或知道了原來要測接腳,每個名子要打對不然根本偵測不到還有接腳要對。</div>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass">
<h2>ag20</h2>
<p>1 足球場</p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData_41023105" height="630" muted="true" width="1008">
<source src="./../downloads/ag20/足球.mp4" type="video/mp4"/></video></div>
<p></p>
</div>
</div>
</div>
</div>
</div>